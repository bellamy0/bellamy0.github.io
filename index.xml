<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bellamy on Bellamy</title>
    <link>https://bellamy0.gitHub.io/</link>
    <description>Recent content in Bellamy on Bellamy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Mar 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>javascript学习七——js面向对象基础</title>
      <link>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%B8%83/</link>
      <pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%B8%83/</guid>
      <description>&lt;p&gt;20&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>javascript学习六——Ajax</title>
      <link>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E5%85%AD/</link>
      <pubDate>Thu, 19 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E5%85%AD/</guid>
      <description>

&lt;h2 id=&#34;1-服务器配置&#34;&gt;1.服务器配置&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;安装nodejs与python并进行配置&lt;/li&gt;
&lt;li&gt;在文件存放目录下使用cmd，输入命令&lt;code&gt;http-server&lt;/code&gt;启动服务器，此时可根据网址localhost:8080/index.html访问（端口号与页面名称自己更改）&lt;/li&gt;
&lt;li&gt;Ajax不能以本地路径执行，必须进行服务器配置&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2-ajax基础&#34;&gt;2.Ajax基础&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ajax读取文件：&lt;code&gt;ajax(url,成功时执行的函数，失败时执行的函数);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;ajax(&amp;quot;aaa.txt&amp;quot;,funtion(str){//str作用，获取服务器返回的内容
     alert(str);
     },funtion(){
         alert(&amp;quot;失败&amp;quot;);
     });
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;字符集编码：需要读的文件跟所有文件必须统一编码，否则易乱码&lt;/li&gt;

&lt;li&gt;&lt;p&gt;eval：将某个东西解析为js可以分析的内容（？）—可以解析json&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;get请求：不填method默认为get&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通过网址传递&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;被提交到网址后面，在url后加：username=xxx&amp;amp;password=xxx&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;容量小（网址长度有限制）&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;post请求：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;不通过网址传递&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;不提交倒网址后面，只能通过network查看到&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;容量大&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;
    &amp;lt;script&amp;gt;
        
    &amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;form action=&amp;quot;www...&amp;quot; method=&amp;quot;get&amp;quot;&amp;gt; //action为提交地址
        用户名：&amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;username&amp;quot;&amp;gt;&amp;lt;br&amp;gt;
        //name与id相像，id给前台看，name数据传递给后台
        密码：&amp;lt;input type=&amp;quot;password&amp;quot; name=&amp;quot;password&amp;quot;&amp;gt;&amp;lt;br&amp;gt;
        &amp;lt;input type=&amp;quot;submit&amp;quot;&amp;gt;   //submit用于提交表单
    &amp;lt;/form&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-ajax中级&#34;&gt;3.Ajax中级&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;编写ajax&lt;/li&gt;
&lt;li&gt;补：全局变量是window上一个属性&lt;code&gt;window.a&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;a&lt;/code&gt;(存在形式变量)、&lt;code&gt;window.a&lt;/code&gt;(存在形式属性)——未定义的变量会报错、未定义的属性只会undefined&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;防止缓存：在文件名后加&amp;rdquo;a.txt?t=&amp;ldquo;+new Date().getTime()&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;
    &amp;lt;script&amp;gt;
        window.onload=function(){
            var oBtn=document.getElementById(&amp;quot;obtn1&amp;quot;);
            oBtn.onclick=function(){
                //1.创建Ajax对象
                if(window.XMLHttpRequest()){
                    //非ie6
                    var oAjax=new XMLHttpRequest();
                }else{
                    //ie6
                    var oAjax=new ActiveXObject(&amp;quot;Microsoft.XMLHTTP&amp;quot;);
                }
                
                //2.连接服务器
                //open(方法get/post，文件名,异步传输)
                //同步——事情一件一件来、异步——事情一起做
                oAjax.open(&amp;quot;get&amp;quot;,&amp;quot;a.txt?t=&amp;quot;+new Date().getTime(),true);
                
                //3.发送请求
                oAjax.send();
                
                //4。接受请求
                oAjax.onreadystatechange=function(){
                    //检查运行到哪一步了，是否完全完成,完全完成则可以调用数据
                    if(oAjax.readyState==4){
                        if(oAjax.status==200){
                            alert(&amp;quot;成功:&amp;quot;+oAjax.responseText);
                        }else{
                            alert(&amp;quot;失败&amp;quot;);
                        }
                    }
                };
            };
        };
    &amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;input type=&amp;quot;button&amp;quot; id=&amp;quot;obtn1&amp;quot; value=&amp;quot;读取&amp;quot;&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ajax文件：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;function ajax(url,fnSucc,fnFailed){
    //1.创建Ajax对象
    if(window.XMLHttpRequest()){
        //非ie6
        var oAjax=new XMLHttpRequest();
    }else{
        //ie6
        var oAjax=new ActiveXObject(&amp;quot;Microsoft.XMLHTTP&amp;quot;);
    }
                
    //2.连接服务器
    //open(方法get/post，文件名,异步传输)
    //同步——事情一件一件来、异步——事情一起做
    oAjax.open(&amp;quot;get&amp;quot;,&amp;quot;a.txt?t=&amp;quot;+new Date().getTime(),true);
                
    //3.发送请求
    oAjax.send();
                
    //4。接受请求
    oAjax.onreadystatechange=function(){
    //检查运行到哪一步了，是否完全完成,完全完成则可以调用数据
    if(oAjax.readyState==4){
        if(oAjax.status==200){
            fnSucc(oAjax.responseText);
        }else{
            fnFailed(oAjax.status);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>javascript学习五——事件基础</title>
      <link>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%BA%94/</link>
      <pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%BA%94/</guid>
      <description>

&lt;h2 id=&#34;1-event事件和事件冒泡&#34;&gt;1.event事件和事件冒泡&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;document：代表整个页面&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;document.onclick=function(){};&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;body:需要撑起来才有内容&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;event.clientX&lt;/code&gt;/&lt;code&gt;ev.clientX&lt;/code&gt;：获取鼠标的横坐标(两种有兼容性的问题)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;event.clientY&lt;/code&gt;/&lt;code&gt;ev.clientY&lt;/code&gt;：获取鼠标的纵坐标&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ev事件处理函数有参数，是系统传的&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;解决event/ev兼容性&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;  某个var对象or整个document.onclick=funtion(ev){
      var oEvent=ev||event;
    alert(oEvent.clientX+&amp;quot;,&amp;quot;+oEvent.clientY);
  };
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;事件冒泡——典型事件流：事件会一直顺着层级传，直到最外层document&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;取消冒泡的应用：下拉菜单，点击外面时菜单消失&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;oEvent.cancelBubble=true;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;2-鼠标事件&#34;&gt;2.鼠标事件&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;onmousemove:鼠标移动时发生&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;某个var对象or整个document.onmousemove=function(ev){
    var oEvent=ev||event;
    ……
};
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;scrolltop：（？）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;3-键盘事件&#34;&gt;3.键盘事件&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;onkeydown：按键按下&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;某个var对象or整个document.onkeydown=funtion(ev){
    var oEvent=ev||event;
    alert(oEvent.keyCode);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;onkeyup：按键抬起&lt;/li&gt;
&lt;li&gt;eg：按键控制div移动&lt;/li&gt;
&lt;li&gt;ctrlkey、shiftkey、altkey：判断ctrl/shift/alt是否被按下&lt;/li&gt;
&lt;li&gt;eg：提交留言在输入框的对象中加onkeydown&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;if(oEvent.keyCode==13 &amp;amp;&amp;amp; oEvent.ctrlKey){
    //判断是否是ctrl和回车
};
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;4-默认行为&#34;&gt;4.默认行为&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;当用户点右键弹出菜单时的事件：&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;某个var对象or整个document.oncontextmenu=funtion(){
    //return false;阻止菜单弹出
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;//事件中级5&lt;/p&gt;

&lt;h2 id=&#34;5-拖拽&#34;&gt;5.拖拽&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>win10的ubuntu踩坑记录</title>
      <link>https://bellamy0.gitHub.io/2020/ubuntu%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/ubuntu%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</guid>
      <description>

&lt;h4 id=&#34;1-linux需要root-user操作时&#34;&gt;1.Linux需要root user操作时：&lt;/h4&gt;

&lt;p&gt;使用命令&lt;code&gt;su&lt;/code&gt; 输入密码进入root&lt;/p&gt;

&lt;h4 id=&#34;2-ubuntu下使用vim编写运行c-c-程序&#34;&gt;2.Ubuntu下使用vim编写运行c，c++程序：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo su&lt;/code&gt; ：转换为超级用户&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vim hello.c/hello.cpp&lt;/code&gt;、&lt;code&gt;vi hello&lt;/code&gt;创建hello.c并打开vim&lt;/li&gt;
&lt;li&gt;键入i或a，进入输入模式&lt;/li&gt;
&lt;li&gt;编写程序&lt;/li&gt;
&lt;li&gt;按ESC键退出输入模式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:wq&lt;/code&gt;输入该命令保存并退出&lt;/li&gt;
&lt;li&gt;编译hello.c/hello.cpp：编译后均生成a.out文件

&lt;ul&gt;
&lt;li&gt;对于c程序：用&lt;code&gt;gcc hello.c&lt;/code&gt; 便可以编译&lt;/li&gt;
&lt;li&gt;对于c++程序：用&lt;code&gt;g++ hello.cpp&lt;/code&gt;可编译&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;输入指令&lt;code&gt;./a.out&lt;/code&gt;运行程序&lt;/li&gt;
&lt;li&gt;在terminal上显示“hello world”即成功&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>javascript学习四——运动基础</title>
      <link>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E5%9B%9B/</link>
      <pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E5%9B%9B/</guid>
      <description>

&lt;h2 id=&#34;1-div的运动&#34;&gt;1.div的运动&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;运动中的bug解决：

&lt;ul&gt;
&lt;li&gt;不会停止——清除timer&lt;/li&gt;
&lt;li&gt;速度取到某些值无法停止——用&amp;gt;=判断而非==&lt;/li&gt;
&lt;li&gt;到达位置点击还会再运动：clearInterval是clear了下一次的——用if else&lt;/li&gt;
&lt;li&gt;重复点击速度加快——在前面先清除所有Interval&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;
    &amp;lt;style&amp;gt;
        #div1{width:200; height:200px; background:red; position:absolute; top:50px; left:0px;}
    &amp;lt;/style&amp;gt;
    &amp;lt;script&amp;gt;
        var timer=null;
        function startMove(){
            var oDiv=document.getElementById(&amp;quot;div1&amp;quot;);
            //clearInterval是防止开启多个定时器
            clearInterval(timer);
            timer=setInterval(function(){
                if(oDiv.offsetLeft&amp;gt;=300){
                   clearInterval(timer);
                }else{
                    oDiv.style.left=oDiv.offsetLeft+10+&amp;quot;px&amp;quot;;
                }
            },30);
        };
    &amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;input id=&amp;quot;btn1&amp;quot; type=&amp;quot;button&amp;quot; value=&amp;quot;开始运动&amp;quot; onclick=&amp;quot;startMove()&amp;quot;&amp;gt;
    &amp;lt;div id=&amp;quot;div1&amp;quot;&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;2-运动框架&#34;&gt;2.运动框架&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;开始运动时关闭已有定时器&lt;/li&gt;
&lt;li&gt;把运动和停止隔开（if/else）&lt;/li&gt;
&lt;li&gt;“分享到”实例：&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;
    &amp;lt;style&amp;gt;
        #div1{width:150px; height:200px; background:green; position:absolute; left:-150;}
        #div1 span{position:absolut; width:20px; height:60px;line-height:20px; background:blue; tight:-20px; top:70px;}
    &amp;lt;/style&amp;gt;
    &amp;lt;script&amp;gt;
        window.onload=function(){
            var oDiv=document.getElementById(&amp;quot;div1&amp;quot;);
            
            oDiv.onmouseover=function(){
                startMove(10,0);
            };
            oDiv.onmouseout=function(){
                startMove(-10,-150);
            };
            
        };
        var timer=null;
        function startMove(speed,iTarget){
            var oDiv=document.getElementById(&amp;quot;div1&amp;quot;);
            clearInterval(timer);
            timer=setInterval(function(){
                if(oDiv.offsetLeft == iTarget){
                    clearInterval(timer);
                }else{
                    oDiv.style.left=oDiv.offsetLeft+speed+&amp;quot;px&amp;quot;;
                }
            },30);
        };
    &amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;div1&amp;quot;&amp;gt;
        &amp;lt;span&amp;gt;分享到&amp;lt;/span&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-缓冲运动&#34;&gt;3.缓冲运动&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;距离越大速度越大&lt;/li&gt;
&lt;li&gt;距离越小速度越小&lt;/li&gt;
&lt;li&gt;关键：speed的求法(÷的目的是让它不要一下跳到目的地300px处)&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var speed=(300-oDiv.offsetLeft)/4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ps：js运动基础2 14&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>javascript学习三——DOM</title>
      <link>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%B8%89/</link>
      <pubDate>Fri, 21 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%B8%89/</guid>
      <description>

&lt;h2 id=&#34;1-节点&#34;&gt;1.节点&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;DOM——&amp;gt;document&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;节点&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;文本节点：无标签包裹的&lt;/li&gt;
&lt;li&gt;元素节点：标签中的&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;获取子节点：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;childNotes：获取某标签下所有节点&lt;/li&gt;
&lt;li&gt;children：获取某标签下元素节点&lt;/li&gt;
&lt;li&gt;&lt;code&gt;oUl.children&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;只算第一层&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;父节点：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;查找父节点：parentNode&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;父节点应用：隐藏列表项&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;  &amp;lt;head&amp;gt;
      &amp;lt;script&amp;gt;
          window.onload=function(){
              var aA=document.getElementsByTypeName(&amp;quot;a&amp;quot;);
              
              for(var i=0;i&amp;lt;aA.lenght;i++){
                  aA[i].onclick=function(){
                      this.parentNode.display=hidden;
                  };
            };
          };
      &amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
      &amp;lt;ul&amp;gt;
          &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;javascript:;&amp;quot;&amp;gt;a&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
          &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;javascript:;&amp;quot;&amp;gt;b&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
          &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;javascript:;&amp;quot;&amp;gt;c&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
      &amp;lt;/ul&amp;gt;
  &amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;offsetParent：获取元素在页面上的实际位置&lt;/li&gt;
&lt;li&gt;firstChild/lastChild：获取收尾子节点&lt;/li&gt;
&lt;li&gt;nextSibling/previousSibling：兄弟节点&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2-操作元素的方式&#34;&gt;2.操作元素的方式：&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;用点操作&lt;/li&gt;
&lt;li&gt;用方括号操作&lt;/li&gt;
&lt;li&gt;DOM：（一般不用）

&lt;ul&gt;
&lt;li&gt;setAttribute(&amp;ldquo;属性名&amp;rdquo;,&amp;ldquo;值&amp;rdquo;)：设置某属性的值&lt;/li&gt;
&lt;li&gt;getAttribute（&amp;rdquo;属性名&amp;rdquo;）：获取某属性的值&lt;/li&gt;
&lt;li&gt;removeAttribute(&amp;ldquo;属性名&amp;rdquo;)：删除某属性的值&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;
    &amp;lt;script&amp;gt;
        window.onload=function(){
            var oTxt=document.getElementById(&amp;quot;txt1&amp;quot;);
            var oBtn=document.getElementById(&amp;quot;btn1&amp;quot;);
            
            oBtn.onclick=function(){
                //法一：用点操作元素
                oTxt.value=&amp;quot;adf&amp;quot;;
                //法二：用方括号操作元素
                oTxt[&amp;quot;value&amp;quot;]=&amp;quot;adf&amp;quot;;
                //法三：DOM
                oTxt.setAttribute(&amp;quot;value&amp;quot;,&amp;quot;adf&amp;quot;);
            };
        };
    &amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;input id=&amp;quot;txt1&amp;quot; type=&amp;quot;text&amp;quot;&amp;gt;
    &amp;lt;input id=&amp;quot;btn1&amp;quot; type=&amp;quot;button&amp;quot; value=&amp;quot;按钮&amp;quot;&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-用classname选择元素&#34;&gt;3.用className选择元素&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;封装getByClass函数&lt;/li&gt;
&lt;li&gt;o开头表示：object&lt;/li&gt;
&lt;li&gt;a开头表示：array&lt;/li&gt;
&lt;li&gt;s开头表示：string&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//oParent表示父标签，sclass表示所需要找的class
function getByClass(oParent,sClass){
    //*为通配符，表示任何标签
    var aEle=oParent.getElementsByTagName(&amp;quot;*&amp;quot;);
    //用于放找到的元素
    var aResult=[];
    
    for(var i=0;i&amp;lt;aEle.length;i++){
        if(aEle[i].class==sClass){
            aResult.push(aEle[i]);
        };
    };
    return aResult；
};
//调用方式
var aBox=getByClass(oUl,&amp;quot;box&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;4-dom操作应用&#34;&gt;4.DOM操作应用&lt;/h2&gt;

&lt;h4 id=&#34;4-1-创建dom元素&#34;&gt;4.1 创建DOM元素&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;var oLi = document.createElement(&amp;quot;标签名&amp;quot;);&lt;/code&gt;：仅为创建元素存入内存&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;oUl.appendChild(oLi);&lt;/code&gt;:为oUl元素添加子节点oLi到末尾（父级.appendchild(子节点)）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;实例：实现用输入框输入的文字生成新的表单项&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;
    &amp;lt;script&amp;gt;
       window.onload=function(){
            var oBtn=document.getElementById(&amp;quot;btn1&amp;quot;);
            var oTxt=document.getElementById(&amp;quot;txt1&amp;quot;);
            var oUl=document.getElementById(&amp;quot;ul1&amp;quot;);
        
            oBtn.onclick=function(){
                var oLi=document.createElement(&amp;quot;li&amp;quot;);
                //将txt1中的数值放入表单项的内容中
                oLi.innerHTML=oTxt.value;
                oUl.appendChild(oLi);
            };
       };
    &amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;input type=&amp;quot;text&amp;quot; id=&amp;quot;txt1&amp;quot;&amp;gt;
    &amp;lt;input type=&amp;quot;button&amp;quot; id=&amp;quot;btn1&amp;quot;&amp;gt;
    &amp;lt;ul id=&amp;quot;ul1&amp;quot;&amp;gt;&amp;lt;/ul&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;4-2-插入dom元素&#34;&gt;4.2 插入DOM元素&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;oUl.insertBefore(oLi,在谁之前)&lt;/code&gt;：插入到某一个位置&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;4-3-删除dome元素&#34;&gt;4.3 删除DOME元素&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;oUl.removeChild(某元素)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;4-4-文档碎片-用处极小&#34;&gt;4.4 文档碎片（用处极小）&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;文档碎片可以提高低级浏览器上的DOM操作性能（先放入文档碎片中，最后统一进行渲染，而不用插一次元素渲染一次）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;文档碎片可以提高低级浏览器上的DOM操作性能（先放入文档碎片中，最后统一进行渲染，而不用插一次元素渲染一次）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;var oFrag=document.createDocumentFragment();&lt;/code&gt;：创建文档碎片的语句&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;5-表格&#34;&gt;5.表格&lt;/h2&gt;

&lt;h4 id=&#34;5-1-表格的简便操作&#34;&gt;5.1 表格的简便操作&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;tBodies(是个数组需要加[])、tHead、tFoot、rows、cells的使用&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;
    &amp;lt;script&amp;gt;
        window.onload=function(){
            var oTab=document.getElementById(&amp;quot;tab1&amp;quot;);
            
            alert(oTab.getElementByTagName(&amp;quot;tbody&amp;quot;)[0].getElementByTagName(&amp;quot;tr&amp;quot;)[1].getElementByTagName[&amp;quot;td&amp;quot;][1].innerHTML);
            //可以简便的写作
            alert(oTab.tBodies[0].rows[1].cells[1].innerHTML);
        };
    &amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;table id=&amp;quot;tab1&amp;quot; border=&amp;quot;1px&amp;quot; width=&amp;quot;500px&amp;quot;&amp;gt;
        &amp;lt;thead&amp;gt;
            &amp;lt;td&amp;gt;ID&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;姓名&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;年龄&amp;lt;/td&amp;gt;
        &amp;lt;/thead&amp;gt;
        &amp;lt;tbody&amp;gt;
            &amp;lt;tr&amp;gt;
                &amp;lt;td&amp;gt;1&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;Red&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;27&amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
            &amp;lt;tr&amp;gt;
                &amp;lt;td&amp;gt;2&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;Blue&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;28&amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
        &amp;lt;/tbody&amp;gt;
    &amp;lt;/table&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;5-2-表格的添加与删除&#34;&gt;5.2 表格的添加与删除&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;注意点：tBodies不能忘！&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;
    &amp;lt;script&amp;gt;
        window.onload=function(){
            var oTab=document.getElementById(&amp;quot;tab1&amp;quot;);
            var oName=document.getElementById(&amp;quot;name&amp;quot;);
            var oBtn=document.getElementById(&amp;quot;btn1&amp;quot;);
            var oAge=document.getElementById(&amp;quot;age&amp;quot;);
            var id=oTab.tbodies[0].rows.length;
            
            oBtn.onclick=function(){
                var oTr=document.creatElement(&amp;quot;tr&amp;quot;);
                
                var oTd=document.creatElement(&amp;quot;td&amp;quot;);
                oTd.innerHTML=id++;
                oTr.appendChild(oTd);
                
                var oTd=document.creatElement(&amp;quot;td&amp;quot;);
                oTd.innerHTML=oName.value;
                oTr.appendChild(oTd);
                
                var oTd=document.creatElement(&amp;quot;td&amp;quot;);
                oTd.innerHTML=oAge.value;
                oTr.appendChild(oTd);
                
                var oTd=document.creatElement(&amp;quot;td&amp;quot;);
                oTd.innerHTML=&#39;&amp;lt;a href=&amp;quot;javascript:;&amp;quot;&amp;gt;删除&amp;lt;/a&amp;gt;&#39;;
                oTr.appendChild(oTd);
                //*****tBodies一定不能忘！从tBodies里面添加
                oTab.tBodies.appendChild(oTr);
                
                oTd.getElementByTagName(&amp;quot;a&amp;quot;).onclick=function(){
                    oTab.tBodies.removeChild(this.parentNode.parentNode);  
                };
            };
        };
    &amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    姓名：&amp;lt;input type=&amp;quot;text&amp;quot; id=&amp;quot;name&amp;quot;&amp;gt;
    年龄：&amp;lt;input type=&amp;quot;text&amp;quot; id=&amp;quot;age&amp;quot;&amp;gt;
    &amp;lt;input type=&amp;quot;button&amp;quot; id=&amp;quot;btn1&amp;quot; value=&amp;quot;添加&amp;quot;&amp;gt;
    &amp;lt;table id=&amp;quot;tab1&amp;quot; border=&amp;quot;1px&amp;quot; width=&amp;quot;500px&amp;quot;&amp;gt;
        &amp;lt;thead&amp;gt;
            &amp;lt;td&amp;gt;ID&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;姓名&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;年龄&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;操作&amp;lt;/td&amp;gt;
        &amp;lt;/thead&amp;gt;
        &amp;lt;tbody&amp;gt;
            &amp;lt;tr&amp;gt;
                &amp;lt;td&amp;gt;1&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;Red&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;27&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
            &amp;lt;tr&amp;gt;
                &amp;lt;td&amp;gt;2&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;Blue&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;28&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
        &amp;lt;/tbody&amp;gt;
    &amp;lt;/table&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;#### 5.3 搜索&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;search：找到并且返回字符串出现的位置，未找到则返回-1&lt;/li&gt;
&lt;li&gt;版本一：基础版本——字符串比较&lt;/li&gt;
&lt;li&gt;版本二：忽略大小写——toLowerCase的使用&lt;/li&gt;
&lt;li&gt;版本三：模糊搜索——search的使用&lt;/li&gt;
&lt;li&gt;版本四：多关键词——split的使用&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;5-4-排序&#34;&gt;5.4 排序&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;appendChild：先把该元素从原父级删掉，再添加到新父级&lt;/li&gt;
&lt;li&gt;按数据结构的排序方法分别appendChild&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;6-表单&#34;&gt;6.表单&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;form的action属性：提交到哪&lt;/li&gt;
&lt;li&gt;前端通过id对应，后端通过name对应&lt;/li&gt;
&lt;li&gt;表单事件：

&lt;ul&gt;
&lt;li&gt;onsubmit：提交时发生&lt;/li&gt;
&lt;li&gt;onreset：重置时发生&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;
    &amp;lt;script&amp;gt;
        window.onload=function(){
            var oForm=document.getElementById(&amp;quot;form1&amp;quot;);
            
            //onsubmit的使用
            oForm.onsubmit=function(){
                alert(&amp;quot;提交成功&amp;quot;);
            };
            
            oForm.onreset=function(){
                alert(&amp;quot;重置成功&amp;quot;);
            };
        };
    &amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;form id=&amp;quot;form1&amp;quot; action=&amp;quot;http://……&amp;quot;&amp;gt;
        用户名：&amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;user&amp;quot;&amp;gt;&amp;lt;br&amp;gt;
        密码：&amp;lt;input type=&amp;quot;password&amp;quot; name=&amp;quot;pass&amp;quot;&amp;gt;
        &amp;lt;input type=&amp;quot;submit&amp;quot;&amp;gt;
        &amp;lt;input type=&amp;quot;reset&amp;quot;&amp;gt;
    &amp;lt;/form&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;表单验证：

&lt;ul&gt;
&lt;li&gt;阻止用户输入非法字符——阻止事件&lt;/li&gt;
&lt;li&gt;输入时、失去焦点时验证——onkeyup、onblur&lt;/li&gt;
&lt;li&gt;提交时检查——onsubmit&lt;/li&gt;
&lt;li&gt;后台数据检查&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>javascript学习二——定时器</title>
      <link>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%BA%8C/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%BA%8C/</guid>
      <description>

&lt;h2 id=&#34;1-打开定时器&#34;&gt;1.打开定时器&lt;/h2&gt;

&lt;h4 id=&#34;1-1-setinterval&#34;&gt;1.1 setInterval&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;用法：&lt;code&gt;setInterval(函数名，时间ms)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;作用：每个一段时间执行一次函数&lt;/li&gt;
&lt;li&gt;返回值：打开的那个定时器&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;1-2-settimeout&#34;&gt;1.2 setTimeout&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;用法：&lt;code&gt;setTimeout(函数名，时间ms)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;作用：只执行一次，且时间为多久后消失&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2-关闭定时器&#34;&gt;2.关闭定时器&lt;/h2&gt;

&lt;h4 id=&#34;2-1-clearinterval&#34;&gt;2.1 clearInterval&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;用法：&lt;code&gt;clearInterval(需要关闭的定时器)&lt;/code&gt; ，此处括号的内容需setInterval返回&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;2-2-cleartimeout&#34;&gt;2.2 clearTimeout&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;用法：同上&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;3-打开与关闭实例&#34;&gt;3.打开与关闭实例&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script&amp;gt;
    window.onload=function(){
        var oBtn1=document.getElementId(&amp;quot;btn1&amp;quot;);
        var oBtn2=document.getElementId(&amp;quot;btn2&amp;quot;);
        
        //设置打开按钮
        oBtn1.onclick=function(){
            //timer用于获取当前打开的是哪个定时器
            timer=setInterval(function(){
                alert(&amp;quot;a&amp;quot;);
            },1000);
        };
        
        //设置关闭按钮
        oBtn2.onclick=function(){
            clearInterval(timer);
        };
    };
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;4-date对象&#34;&gt;4.Date对象&lt;/h2&gt;

&lt;h4 id=&#34;4-1-gethours&#34;&gt;4.1 getHours&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;作用：获取当前时间&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;4-2-getminutes&#34;&gt;4.2 getMinutes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;作用：获取当前分钟&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;4-3-getsecond&#34;&gt;4.3 getSecond&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;作用：获取当前秒&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;4-4-getfullyear&#34;&gt;4.4 getFullYear&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;作用：获取年份&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;4-5-getmonth&#34;&gt;4.5 getMonth&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;作用：获取月份，从0开始，需要+1&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;4-6-getdate&#34;&gt;4.6 getDate&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;作用：获取日期&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;4-7-getday&#34;&gt;4.7 getDay&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;作用：获取星期（0代表周日，以此类推）&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;var oDate=new Date();
var oHours=oDate.getHours();
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;5-date实例&#34;&gt;5.Date实例&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;时间显示器&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;
    &amp;lt;script&amp;gt;
        //新建函数用于将每一位都变为两位数字
        function toDou(n){
            if(n&amp;lt;10){
                return &amp;quot;0&amp;quot;+n;
            }else{
                return &amp;quot; &amp;quot;+n;
                //空字符串保证了返回一定为字符串
            }
        }
        window.onload=function(){
            //新建一个数组存放所有img标签
            var aImag=document.getElementsByTypeNmae(&amp;quot;img&amp;quot;);
            //tick的设置是为了防止setInterval带来的一秒空隙
            function tick(){
                //新建oDate读取当前系统时间
                var oDate = new Date();
                //拼src数组
                var str=toDou(oDate.getHours())+toDou(oDate.getMinutes())+toDou(oDate.getSeconds());
  
                //修改每一个img的src
                for(var i=0; i&amp;lt;aImag.length;i++){
                    aImage[i].src=&amp;quot;img/&amp;quot;+src[i]+&amp;quot;.png&amp;quot;;
                    }
                };
             tick();
             setInterval(tick,1000);
            }  
    &amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;img src=&amp;quot;img/0.png&amp;quot;&amp;gt;
    &amp;lt;img src=&amp;quot;img/0.png&amp;quot;&amp;gt;
    :
    &amp;lt;img src=&amp;quot;img/0.png&amp;quot;&amp;gt;
    &amp;lt;img src=&amp;quot;img/0.png&amp;quot;&amp;gt;
    :
    &amp;lt;img src=&amp;quot;img/0.png&amp;quot;&amp;gt;
    &amp;lt;img src=&amp;quot;img/0.png&amp;quot;&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;注：低版本浏览器不兼容&lt;code&gt;str[i]&lt;/code&gt;的方式，则需要使用&lt;code&gt;str.charAt(i)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;6-延时提示框&#34;&gt;6.延时提示框&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;实例：电脑版qq，鼠标移入头像处显示资料页&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-HTML&#34;&gt;&amp;lt;head&amp;gt;
    &amp;lt;style&amp;gt;
        //设置两个类似头像与资料页的版块
        div{ float:left; margin:10px;}
        #div1{width:50px; height:50px; background:red; }
        #div2{width:100px; height:100px; background: #CCC; display:none; }
    &amp;lt;/style&amp;gt;
    &amp;lt;script&amp;gt;
        window.onload=function(){
            var oDiv1=document.getElementById(&amp;quot;div1&amp;quot;);
            var oDiv2=document.getElementById(&amp;quot;div2&amp;quot;);
            var timer=null;
            var timer2=null;
            //设置鼠标移入时执行的函数——更改display
            oDiv1.onmouseover=function(){
                //此处的clearTimeout的作用是移回div1时防止不能及时出现div2
                clearTimeout(timer2);
                oDiv1.style.display=&amp;quot;block&amp;quot;;
            };
            //设置鼠标移出时执行的函数——更改display
            oDiv1.onmouseout=function(){
                //设置资料页显示时间
                timer=setTimeout(function(){
                    oDiv2.style.display=&amp;quot;none&amp;quot;;
                },500);
            };
            
            //当移入div2时，关闭timer定时器，则div2不会消失
            oDiv2.onmouseover=function(){
                clearTimeout(timer);
            };
            //当移出div2时，关闭div2
            oDiv2.onmouseout=function(){
                //此处setTimeout作用，防止从div2到div1的闪动
                timer2=setTimeout(function(){
                    oDiv2.style.display=&amp;quot;none&amp;quot;; 
                },500);
            };
        };
    &amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;div1&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div id=&amp;quot;div2&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;简化代码&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt; oDiv1.onmouseout=oDiv2.onmouseout=function(){
                //此处setTimeout作用，防止从div2到div1的闪动
                timer2=setTimeout(function(){
                    oDiv2.style.display=&amp;quot;none&amp;quot;; 
                },500);
            };
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;7-无缝滚动&#34;&gt;7.无缝滚动&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;offsetLeft/offsetRight/offsetWidth/offsetHeight：获取物体左右间距、宽高&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;javascript:;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;作用：

&lt;ul&gt;
&lt;li&gt;通过超链接调用js，而不进行页面跳转（&lt;code&gt;href=&amp;quot;url&amp;quot;&lt;/code&gt;）或刷新（&lt;code&gt;href=&amp;quot;&amp;quot;&lt;/code&gt;）或回到顶部&lt;code&gt;href=&amp;quot;#&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;
    &amp;lt;style&amp;gt;
        *{margin:0; padding:0px;}
        #div1{width:712px;height:108px;margin:100px auto;position:relative; overflow:hidden;}
        //让ul移动能高效，用li移动复杂
        #div1 ul{position:absolute;}
        #div1 ul li{float:left; width:178px; height:108px;list-style:none;}
    &amp;lt;/style&amp;gt;
    &amp;lt;script&amp;gt;
       window.onload=function(){
           //获取标签
            var oDiv=document.getElementId(&amp;quot;div1&amp;quot;);
            var oUl=oDiv.getElementsByTypeName(&amp;quot;ul&amp;quot;);
            var aLi=oUl.getElementsByTypeName(&amp;quot;li&amp;quot;);
           
            var speed=2;
           //增加长度到二倍
           oUl.innerHTML=oUl.innerHTML+oUl.innerHTML;
           //宽度设置为动态的
           oUl.style.width=aLi[0].offsetWidth*aLi.length+&amp;quot;px&amp;quot;;
           function move(){
               //当滚动过半时（回到第一张图）清零left边距
               //取复制是因为ul为相对位置，最左边边界出为0，再向左走则为负值，而width不能为负
               if(oUl.offsetLeft&amp;lt;-oUl.offsetWidth/2){
                    oUl.style.left=&amp;quot;0&amp;quot;;
                  }
               //设置滚动速度
               oUl.style.left=oUl.offsetLeft-2+&amp;quot;px&amp;quot;;
               //取30在学习运动时分析
           }
           var timer = setInterval(move,30);
           
           //设置鼠标移入移出的暂停与运动
           oDiv.onmouseover=function(){
                clearInterval(timer);
           };
           oDiv.onmouseout=function(){
                timer = setInterval(move,30);
           };
           //更改speed，更改走的方向
           document.getElementsByTagName(&amp;quot;a&amp;quot;)[0].onclick=function(){
               speed=-2;
           };
           document.getElementsByTagName(&amp;quot;a&amp;quot;)[1].onclick=function(){
               speed=2;
           };
       };
    &amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;a href=&amp;quot;javascript:;&amp;quot;&amp;gt;向左走&amp;lt;/a&amp;gt;
    &amp;lt;a href=&amp;quot;javascript:;&amp;quot;&amp;gt;向右走&amp;lt;/a&amp;gt;
    &amp;lt;div id=&amp;quot;div1&amp;quot;&amp;gt;
        &amp;lt;ul&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;img src=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;img src=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;img src=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>OpenGL踩坑记录</title>
      <link>https://bellamy0.gitHub.io/2020/opengl%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/opengl%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</guid>
      <description>

&lt;h2 id=&#34;一-opengl程序的初始设置-vs&#34;&gt;一、OpenGL程序的初始设置（vs）&lt;/h2&gt;

&lt;h4 id=&#34;1-1-更改项目windows-sdk版本&#34;&gt;1.1 更改项目Windows SDK版本&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;VS 2017提示无法打开包括文件:“Windows.h”:No such file or director的解决办法&lt;/li&gt;

&lt;li&gt;&lt;p&gt;首先看有没有安装windows sdk，如果没有安装，请打开visual Stdio Installer，然后选择修改，勾上最新版的windows SDK&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在项目上右键——属性——配置属性——常规——Windows SDK版本——改为10.0.17763.0（或刚刚安装的版本&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;测试一下是否可以包含，如果还不行。在上面属性页的VC++目录-&amp;gt;包含目录中打开，查看um文件夹是否在里面，如果不在的话添加到包含目录。windows.h文件就在这个目录C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\um\windows.h&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;1-2-更改项目调试信息格式&#34;&gt;1.2 更改项目调试信息格式&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;又为 vs的“错误 D8016   “/ZI”和“/Gy-”命令行选项不兼容”问题解决办法&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;接上条，配置属性——C/C++——常规——调试信息格式——改为无&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;二-opengl程序导入-h文件&#34;&gt;二、OpenGL程序导入.h文件&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;将h文件和cpp文件放在不同的目录中，但是会报错，解决方法：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1.找到.h文件目录。
2.将所以的.h文件剪切到“include”目录中。
3.这时编译会出错，提示“f:\c++实战\stdafx.cpp(5): fatal error C1083: 无法打开包括文件:“stdafx.h”: No such file or directory”
4.找到.h存放的目录，复制地址。
5.项目-&amp;gt;右击-&amp;gt;属性-&amp;gt;配置属性-&amp;gt;C/C++-&amp;gt;常规-&amp;gt;附加包含目录-&amp;gt;ADD-&amp;gt;“F:\C++实战\c++_training_camp\zhujq-a\DLL_DBEngine\include”或着“....\include”。
6.这时再编译就会出现成功的提示了。&lt;/p&gt;

&lt;p&gt;7.但是这个时候，你会发现，之前的.h文件双击进不去了。
8.选中.h文件-&amp;gt;右击-&amp;gt;移除。
9.项目-&amp;gt;右击-&amp;gt;添加-&amp;gt;现有项-&amp;gt;选中.h文件-&amp;gt;添加。
10.这时候双击，又可以看到.h文件内容了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>javascript学习一——基础语法</title>
      <link>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%B8%80/</link>
      <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%B8%80/</guid>
      <description>

&lt;h1 id=&#34;一-js基础语法知识&#34;&gt;一、JS基础语法知识&lt;/h1&gt;

&lt;h4 id=&#34;1-javascript组成&#34;&gt;1. JavaScript组成：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ECMAscript&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;DOM：文档&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;BOM：浏览器&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;2-属性&#34;&gt;2. 属性：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;type=&amp;lsquo;text/javascript&amp;rsquo;说明标签内的文本格式&lt;/li&gt;
&lt;li&gt;src引入外部js文件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;demo.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;3-注意点&#34;&gt;3. 注意点：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;可以有多个&amp;lt;script&amp;gt;标签，但js是按代码顺序执行的&lt;/li&gt;
&lt;li&gt;一个标签只能做一件事情（要么引入，要么直接在里面写代码）&lt;/li&gt;
&lt;li&gt;js代码需要有分号！&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;4-js中的输出方法&#34;&gt;4. js中的输出方法：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;alert()&lt;/code&gt;：弹出一个警告框&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document.write()&lt;/code&gt;：在页面上输出内容

&lt;ul&gt;
&lt;li&gt;如果括号内有html标签会自动解析，不会以文本形式输出&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;console.log()&lt;/code&gt;：在控制台上输入内容

&lt;ul&gt;
&lt;li&gt;一般用于代码调试，不影响用户（招聘简介放在）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;5-常量&#34;&gt;5、常量&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;数据类型：

&lt;ul&gt;
&lt;li&gt;数字：&lt;/li&gt;
&lt;li&gt;类型：number&lt;/li&gt;
&lt;li&gt;例子：100、-20、3.14&lt;/li&gt;
&lt;li&gt;布尔值：&lt;/li&gt;
&lt;li&gt;类型：Boolean&lt;/li&gt;
&lt;li&gt;例子：true、false&lt;/li&gt;
&lt;li&gt;字符串：&lt;/li&gt;
&lt;li&gt;类型：所有单引号或双引号的内容（都一样）&lt;/li&gt;
&lt;li&gt;例子：“100”，“hello”&lt;/li&gt;
&lt;li&gt;复合/引用数据类型：&lt;/li&gt;
&lt;li&gt;特殊数据类型：null、undefined（没有初始化）、NaN&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;6-变量&#34;&gt;6、变量&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;声明变量关键字：var&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;7-变量弱引用&#34;&gt;7、变量弱引用&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;定义：变量赋值是什么类型，就是什么类型&lt;/li&gt;
&lt;li&gt;注意：不建议改变变量的数据类型&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;8-三目运算符&#34;&gt;8、三目运算符&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;num % 2 = 0 ? alert(偶数):alert(奇数)；
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;9-函数&#34;&gt;9、函数&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;语法：声明函数&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;function 函数名(形参){}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;执行时需要用&lt;code&gt;函数名(参数);&lt;/code&gt;调用&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;事件驱动函数&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;1.1 onclick：失去光标时触发&lt;/p&gt;

&lt;p&gt;1.2 onblur：失去焦点时触发&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;匿名函数：无函数名，通过变量调用或直接调用&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;   &amp;lt;script&amp;gt;
       window.onload()=function(){
           //1.通过变量调用
           var obj1=function(){
               alert(&amp;quot;通过变量调用&amp;quot;);
           }
           obj1();
           
           //2.直接调用，函数必须加括号包裹，且让其执行需在尾部添加括号
           (function(){
               alert(&amp;quot;直接调用&amp;quot;)
           })();
       }
   &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;10-字符串&#34;&gt;10、字符串&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;字符串重点方法：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;substring：&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;格式：&lt;code&gt;字符串.substring(start,end);&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;功能：将字符串中的[start,end]提出出来生成新的字符串&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;返回值：新生成的字符串&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;substr：&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;格式：&lt;code&gt;字符串.substr(start,end)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;返回值：新生成的字符串&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;slice（是数组）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;格式：&lt;code&gt;字符串.slice(start,end)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;replace():&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;格式：&lt;code&gt;字符串.replace(oldstr,newstr)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;功能：用newstr替换oldstr&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;参数：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;第一个参数传入的是字符串则只能替换一次&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;第一个参数传入正则表达式&lt;code&gt;/xxx/ig&lt;/code&gt; ，参数i代表忽略大小写，g代表全局匹配&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;字符串.replace(/xxx/ig,newstr)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;split()：&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;格式：&lt;code&gt;字符串.split(分隔符, length)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;参数：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;第一个参数，用这个分隔符对愿字符串进行分割&lt;/li&gt;
&lt;li&gt;第二个参数，控制返回数组的元素格式，一般不用&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;注意：分隔符是空字符串时&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;，直接将每一个字符单独分割为字串返回&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;toLowerCase()&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;toUperCase()&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;concat:字符串拼接（一般情况下用+比较多）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;格式：&lt;code&gt;字符串.concat(字符串1，字符串2，……)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;indexof&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;表单验证实例&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;
    &amp;lt;script&amp;gt;
        function func(){
            //根据id获取标签的方法——&amp;gt;document.getElementId(&amp;quot;id&amp;quot;)
            var oUsername=document.getElementId(&amp;quot;username&amp;quot;);
            var oUsernameSpan=document.getElementId(&amp;quot;username_span&amp;quot;);
            
            //拿到输入框中的内容
            var oValue=oUsername.value;
            
            //判断
            //用户名是否复合长度
            if(oValue.length&amp;gt;18 || oValue.length&amp;lt;6){
                oUsernameSpan.innerHTML=&amp;quot;!长度必须在6~18个字符内&amp;quot;；
            }else if(!isABC(oValue[0])){
                oUsernameSpan.innerHTML=&amp;quot;地址必须以英文字母开头&amp;quot;；
            }
        }
        
        function isABC(charStr){
            if(charStr &amp;gt;= &amp;quot;a&amp;quot;&amp;amp;&amp;amp; charStr&amp;lt;=&amp;quot;z&amp;quot; || charStr&amp;gt;=&amp;quot;A&amp;quot;&amp;amp;&amp;amp;charStr &amp;lt;=&amp;quot;Z&amp;quot;){
                return true;
            }else{
                return false;
            }
        }
    &amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;div1&amp;quot;&amp;gt;
        &amp;lt;input id = &amp;quot;username&amp;quot; type=&amp;quot;text&amp;quot; placeholder=&amp;quot;用户名&amp;quot; onblur=&amp;quot;func();&amp;quot;&amp;gt;
        &amp;lt;span id=&amp;quot;username_span&amp;quot;&amp;gt;6~18个字符，可使用、字母、数字、下划线开头&amp;lt;/span&amp;gt;
        &amp;lt;input type=&amp;quot;text&amp;quot; placeholder=&amp;quot;密码&amp;quot;&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;二-js与html部分交互的部分函数&#34;&gt;二、js与html部分交互的部分函数&lt;/h1&gt;

&lt;h4 id=&#34;1-getelementid&#34;&gt;1.getElementId&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;语法：&lt;code&gt;x=document.getElementId(&amp;quot;id&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;作用：用id返回（获取）某个标签&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;2-getelementsbytagname&#34;&gt;2.getElementsByTagName&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;语法：&lt;code&gt;var x=document.getElementByTagName(&amp;quot;标签名&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;作用：返回所有该标签，每一个存入一个数组中，可以计算标签个数&lt;code&gt;x.length&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;3-innerhtml&#34;&gt;3.innerHTML&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;语法：&lt;code&gt;x.innerHTML&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;作用：用于表示标签中的内容&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;4-onmouseover&#34;&gt;4.onmouseover&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;语法：可写入html作为一个属性、也可写入js中&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;element onmouseover=&amp;quot;&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;object.onmouseover=function(){};&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;作用：事件会在鼠标移入到指定元素上发生&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;5-onmouseout&#34;&gt;5.onmouseout&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;语法同上&lt;/li&gt;
&lt;li&gt;作用：事件会在鼠标移出到指定元素上发生&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;三-认识bom&#34;&gt;三、认识BOM&lt;/h1&gt;

&lt;h4 id=&#34;1-系统对话框&#34;&gt;1.系统对话框&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;window方法（一般情况下window可以省略）

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;window.alert()&lt;/code&gt;：弹出警告框&lt;/li&gt;
&lt;li&gt;&lt;code&gt;window.confirm()&lt;/code&gt;：弹出一个带确定和取消的提示框（确定返回值为true，点击取消返回false）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;window.prompt()&lt;/code&gt;：弹出一个带输入框的提示框&lt;/li&gt;
&lt;li&gt;参数：第一个参数：面板上显示的内容；第二个参数输入框里的默认（可以不填）&lt;/li&gt;
&lt;li&gt;返回值：点击确定返回输入框的内容，点击取消返回null&lt;/li&gt;
&lt;li&gt;&lt;code&gt;window.onload()=fuction(){}&lt;/code&gt;：在方法用于在网页加载完毕后立刻执行操作&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;open方法

&lt;ul&gt;
&lt;li&gt;第一个参数：url，跳转该url&lt;/li&gt;
&lt;li&gt;第二个参数：字符串，给打开的窗口起一个名字，随后继续点则打开该名字的窗口&lt;/li&gt;
&lt;li&gt;第三个参数：一串特殊含义的字符串，可以设置很多属性……&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;四-认识this-未完&#34;&gt;四、认识this(未完)&lt;/h1&gt;

&lt;h4 id=&#34;1-方法中的this&#34;&gt;1.方法中的this&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;含义：在对象方法中，this指向调用它所在的方法的对象&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;body&amp;gt;
    &amp;lt;p id=&amp;quot;demo&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
    &amp;lt;script&amp;gt;
        //创建一个对象
        var person={
            
        }
    &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>CSS进阶学习一</title>
      <link>https://bellamy0.gitHub.io/2020/css%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E4%B8%80/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/css%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E4%B8%80/</guid>
      <description>

&lt;h2 id=&#34;一-b标签与i标签&#34;&gt;一、b标签与i标签&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;strong与b、em与i的相同点：都可以实现相同效果（加粗与斜体），但前者是语义化的（有含义的），后者不具备语义化（无含义）&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;b与i存在的意义：简化选择器的操作，可以直接区分，而不用额外添加class&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;二-引用相关标签&#34;&gt;二、引用相关标签&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Css阶段实战作业—企业首页</title>
      <link>https://bellamy0.gitHub.io/2020/css%E9%98%B6%E6%AE%B5%E5%AE%9E%E6%88%98%E4%BD%9C%E4%B8%9A%E4%BC%81%E4%B8%9A%E9%A6%96%E9%A1%B5/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/css%E9%98%B6%E6%AE%B5%E5%AE%9E%E6%88%98%E4%BD%9C%E4%B8%9A%E4%BC%81%E4%B8%9A%E9%A6%96%E9%A1%B5/</guid>
      <description>

&lt;p&gt;页面效果请到：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://bellamy0.github.io/Basic-learning-of-CSS-One/htmlExercise/index.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://bellamy0.github.io/Basic-learning-of-CSS-One/htmlExercise/index.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(本页面仅为css页面效果展示，无js交互)&lt;/p&gt;

&lt;h1 id=&#34;源码-html部分&#34;&gt;源码（html部分）&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;
    &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;ie=edge&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;./css/common.css&amp;quot; id=&amp;quot;&amp;quot;&amp;gt;
    &amp;lt;style&amp;gt;
        #banner{position: relative;}
        #banner .banner_list{ width: 100%; height: 469px; position: relative;}
        #banner .banner_list li{width: 100%; height: 100%; background:center 0 no-repeat; position:absolute; top: 0;left: 0;  opacity: 0; z-index: 1; }
        #banner .banner_list li.active{opacity: 1;z-index: 10;}
        #banner .banner_list li a{display: block; width:100%; height: 100%;}
        #banner .banner_btn{width:100%; position: absolute; bottom: 19px;z-index: 20; font-size: 0; text-align: center; }
        #banner .banner_btn li{ width:12px; height:12px; display: inline-block; border: 2px solid white; border-radius: 50%; box-sizing: border-box; margin: 0 6px; cursor: pointer; }
        #banner .banner_btn li.active{ background: white; }

        #service{ min-height: 407px; overflow: hidden;}
        /* 文字居中方式：text-align: center; */
        #service .service_list{ text-align: center; margin-top: 34px;}
        #service .service_list li{float: left; width: 250px;}
        /* 块居中方式margin：0 auto； */
        #service .service_list div{ height: 102px;width: 102px; margin: 0 auto;}
        #service .service_list li:nth-of-type(1) div{background-image: url(./images/e-bussiness1.png);}
        #service .service_list li:nth-of-type(2) div{background-image: url(./images/graphic1.png);}
        #service .service_list li:nth-of-type(3) div{background-image: url(./images/mail1.png);}
        #service .service_list li:nth-of-type(4) div{background-image: url(./images/web1.png);}
        #service .service_list h3{font-size: 18px; color: #434343; line-height: 36px; margin-top: 25px;}
        #service .service_list p{font-size: 14px; color:#6D6D6D; line-height: 22px;}

        #case{background: #f8f8f8; }
        #case .container{ min-height: 460px; overflow: hidden;}
        #case .area_title{margin-top: 55px;}
        #case .area_title h2{color: #66C5B4;}
        #case .case_list{margin-top: 28px;}
        #case .case_list li{float: left;width: 340px;margin: 0 10px;}
        #case .case_btn{width: 136px;height: 37px; background: #66C5B4; margin: 0 auto; border-radius: 20px; text-align: center; line-height: 37px; font-size: 14px; margin-top: 36px; }
        #case .case_btn a{display: block; height: 100%; width: 100%; color: white;}

        #news{ overflow:hidden; min-height: 450px; }
        #news .area_title{margin-top: 65px;}
        #news dl{ margin-top: 48px;}
        #news dt{width: 234px;}
        #news dd{width: 846px;}
        #news .news_list{widows: 100%;}
        #news .news_list li{width: 50%;float: left;margin-bottom: 48px;}
        #news .news_date{width: 71px;height:70px; border-right: 1px solid #DCDCDC; text-align: center;}
        #news .news_date i{color: #66C5B4; font-size: 39px;display: block;font-weight: bold; }
        #news .news_date span{color: #999999; font-size: 20px;line-height: 36px;}
        #news .news_text{width: 310px; margin-left: 20px;}
        #news .news_text h3{font-size: 14px;}
        #news .news_text h3 a{color: #3F3F3F;}
        #news .news_text p{color: #A4A4A4;font-size: 12px;line-height: 21px;margin-top: 17px;}


    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;!-- id有唯一性，一般用class --&amp;gt;
    &amp;lt;!-- 头部的设置 --&amp;gt;
    &amp;lt;div id=&amp;quot;head&amp;quot; class=&amp;quot;container&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;head_log l&amp;quot;&amp;gt;
            &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;
                &amp;lt;img src=&amp;quot;./images/logo.png&amp;quot; alt=&amp;quot;&amp;quot; title=&amp;quot;博文尚美&amp;quot;&amp;gt;
            &amp;lt;/a&amp;gt;
        &amp;lt;/div&amp;gt; 
        &amp;lt;ul class=&amp;quot;head_menu r&amp;quot;&amp;gt;
            &amp;lt;li&amp;gt;
                &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;首页&amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;
                &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;关于我们&amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;
                &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;客户案例&amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;
                &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;服务项目&amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;
                &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;新闻资讯&amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;
                &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;联系我们&amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;  
    &amp;lt;/div&amp;gt;

    &amp;lt;!-- 通栏的设置 --&amp;gt;
    &amp;lt;div id=&amp;quot;banner&amp;quot; class=&amp;quot;container-fluid&amp;quot;&amp;gt;
        &amp;lt;ul class=&amp;quot;banner_list&amp;quot;&amp;gt;
            &amp;lt;li class=&amp;quot;active&amp;quot; style=&amp;quot;background-image: url(./images/banner.jpg)&amp;quot;&amp;gt;
                &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
            &amp;lt;li style=&amp;quot;background-image: url(./images/20141118105240603.jpg)&amp;quot;&amp;gt;
                &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
            &amp;lt;li style=&amp;quot;background-image: url(./images/20141118105423471.jpg)&amp;quot;&amp;gt;
                &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
            &amp;lt;li style=&amp;quot;background-image: url(./images/20141118105500969.jpg)&amp;quot;&amp;gt;
                &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
        &amp;lt;ol class=&amp;quot;banner_btn&amp;quot;&amp;gt;
            &amp;lt;li class=&amp;quot;active&amp;quot;&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;/ol&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div id=&amp;quot;service&amp;quot; class=&amp;quot;container&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;area_title&amp;quot;&amp;gt;
            &amp;lt;h2&amp;gt;服务范围&amp;lt;/h2&amp;gt;
            &amp;lt;p&amp;gt;OUR SERVICES&amp;lt;/p&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div&amp;gt;
            &amp;lt;ul class=&amp;quot;service_list&amp;quot;&amp;gt;
                &amp;lt;li&amp;gt;
                    &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
                    &amp;lt;h3&amp;gt;1.WEB DESIGN&amp;lt;/h3&amp;gt;
                    &amp;lt;p&amp;gt;
                        企业品牌网站设计 / 手机网站制作
                        &amp;lt;br&amp;gt;
                        动画网站创意设计
                    &amp;lt;/p&amp;gt;
                &amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;
                    &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
                    &amp;lt;h3&amp;gt;2.GRAPHIC DESIGN&amp;lt;/h3&amp;gt;
                    &amp;lt;p&amp;gt;
                        标志LOGO设计 / 产品宣传册设计
                        &amp;lt;br&amp;gt;
                        企业广告 / 海报设计
                    &amp;lt;/p&amp;gt;
                &amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;
                    &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
                    &amp;lt;h3&amp;gt;3.E-BUSINESS PLAN&amp;lt;/h3&amp;gt;
                    &amp;lt;p&amp;gt;
                        淘宝 / 天猫装修设计及运营推广
                        &amp;lt;br&amp;gt;
                        企业微博 / 微信营销
                    &amp;lt;/p&amp;gt;
                &amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;
                    &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
                    &amp;lt;h3&amp;gt;4.MAILBOX AGENTS&amp;lt;/h3&amp;gt;
                    &amp;lt;p&amp;gt;
                        腾讯 / 网易企业邮箱品牌代理
                        &amp;lt;br&amp;gt;
                        个性化邮箱定制开发
                    &amp;lt;/p&amp;gt;
                &amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    
    &amp;lt;div id=&amp;quot;case&amp;quot; class=&amp;quot;container-fluid&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
            &amp;lt;div class=&amp;quot;area_title&amp;quot;&amp;gt;
                &amp;lt;h2&amp;gt;［ 客户案例 ］&amp;lt;/h2&amp;gt;
                &amp;lt;p&amp;gt;With the best professional technology, to design the best innovative web site&amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;ul class=&amp;quot;case_list clear&amp;quot;&amp;gt;
                &amp;lt;li&amp;gt;
                    &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;./images/20141121095528549.jpg&amp;quot; alt=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
                &amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;
                    &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;./images/20141121105856226.jpg&amp;quot; alt=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
                &amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;
                    &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;./images/20141121095216750.jpg&amp;quot; alt=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
                &amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
            &amp;lt;div class=&amp;quot;case_btn&amp;quot;&amp;gt;
                &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;VIEW MORE&amp;lt;/a&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div id=&amp;quot;news&amp;quot; class=&amp;quot;container&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;area_title&amp;quot;&amp;gt;
            &amp;lt;h2&amp;gt;最新资讯&amp;lt;/h2&amp;gt;
            &amp;lt;p&amp;gt;TEH LATEST NEWS&amp;lt;/p&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;dl&amp;gt;
            &amp;lt;dt class=&amp;quot;l&amp;quot;&amp;gt;
                &amp;lt;img src=&amp;quot;./images/xs1.jpg&amp;quot; alt=&amp;quot;&amp;quot;&amp;gt;
            &amp;lt;/dt&amp;gt;
            &amp;lt;dd class=&amp;quot;l&amp;quot;&amp;gt;
                &amp;lt;ul class=&amp;quot;news_list&amp;quot;&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;div class=&amp;quot;news_date l&amp;quot;&amp;gt;
                            &amp;lt;i&amp;gt;18&amp;lt;/i&amp;gt;
                            &amp;lt;span&amp;gt;Aug&amp;lt;/span&amp;gt;
                        &amp;lt;/div&amp;gt;
                        &amp;lt;div class=&amp;quot;news_text l&amp;quot;&amp;gt;
                            &amp;lt;h3&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;漳州西恩视觉婚纱摄影网站建设&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;
                            &amp;lt;p&amp;gt;漳州西恩视觉婚纱摄影隶属西恩视觉文化传播有限公司旗下婚纱摄影品牌，由国内著名摄影师冬晖CHAN...&amp;lt;/p&amp;gt;
                        &amp;lt;/div&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;div class=&amp;quot;news_date l&amp;quot;&amp;gt;
                            &amp;lt;i&amp;gt;18&amp;lt;/i&amp;gt;
                            &amp;lt;span&amp;gt;Aug&amp;lt;/span&amp;gt;
                        &amp;lt;/div&amp;gt;
                        &amp;lt;div class=&amp;quot;news_text l&amp;quot;&amp;gt;
                            &amp;lt;h3&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;漳州西恩视觉婚纱摄影网站建设&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;
                            &amp;lt;p&amp;gt;漳州西恩视觉婚纱摄影隶属西恩视觉文化传播有限公司旗下婚纱摄影品牌，由国内著名摄影师冬晖CHAN...&amp;lt;/p&amp;gt;
                        &amp;lt;/div&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;div class=&amp;quot;news_date l&amp;quot;&amp;gt;
                            &amp;lt;i&amp;gt;18&amp;lt;/i&amp;gt;
                            &amp;lt;span&amp;gt;Aug&amp;lt;/span&amp;gt;
                        &amp;lt;/div&amp;gt;
                        &amp;lt;div class=&amp;quot;news_text l&amp;quot;&amp;gt;
                            &amp;lt;h3&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;漳州西恩视觉婚纱摄影网站建设&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;
                            &amp;lt;p&amp;gt;漳州西恩视觉婚纱摄影隶属西恩视觉文化传播有限公司旗下婚纱摄影品牌，由国内著名摄影师冬晖CHAN...&amp;lt;/p&amp;gt;
                        &amp;lt;/div&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;
                        &amp;lt;div class=&amp;quot;news_date l&amp;quot;&amp;gt;
                            &amp;lt;i&amp;gt;18&amp;lt;/i&amp;gt;
                            &amp;lt;span&amp;gt;Aug&amp;lt;/span&amp;gt;
                        &amp;lt;/div&amp;gt;
                        &amp;lt;div class=&amp;quot;news_text l&amp;quot;&amp;gt;
                            &amp;lt;h3&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;漳州西恩视觉婚纱摄影网站建设&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;
                            &amp;lt;p&amp;gt;漳州西恩视觉婚纱摄影隶属西恩视觉文化传播有限公司旗下婚纱摄影品牌，由国内著名摄影师冬晖CHAN...&amp;lt;/p&amp;gt;
                        &amp;lt;/div&amp;gt;
                    &amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
            &amp;lt;/dd&amp;gt;
        &amp;lt;/dl&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div id=&amp;quot;foot&amp;quot; class=&amp;quot;container-fluid&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
            &amp;lt;p class=&amp;quot;l&amp;quot;&amp;gt;Copyright 2006- 2014 Bowenshangmei Culture All Rights Reserved&amp;lt;/p&amp;gt;
            &amp;lt;div class=&amp;quot;r&amp;quot;&amp;gt;
                &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Home&amp;lt;/a&amp;gt; | &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;About&amp;lt;/a&amp;gt; | &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Portfolio&amp;lt;/a&amp;gt; | &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Contact&amp;lt;/a&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;源码-css部分&#34;&gt;源码（CSS部分）&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;
/* 去掉边框 */
*{ margin:0; padding:0; }
/* 去掉列表前面的点 */
ul,ol{ list-style: none;}
/* 把图片设置为块 */
img{display: block;}
/* 去掉链接下划线，设置默认颜色 */
a{text-decoration: none; color: #646464; }
/* 设置标题默认大小 */
h1,h2,h3{font-size:16px;}
/* 设置默认中英文文字 */
body{ font-family: Arial; }

/* 设置浮动，用伪类是因为伪类才能重复使用 */
.l{float: left;}
.r{float: right;}
/* 设置为块显示 */
.clear:after{ content: &amp;quot;&amp;quot;; display:block; clear: both; }
/* 设置版心，固定宽度，居中显示，内容根据版心有相对定位 */
.container{ width:1080px; margin:0 auto; position: relative; }
/* 设置通栏 */
.container-fluid{ width: 100%; }

#head{height: 81px;}

#head .head_log{ width: 162px; height: 44px;} 

#head .head_menu{ font-size: 14px; line-height: 81px; }

#head .head_menu li{ float: left; margin-left: 58px;}

.area_title{margin-top: 60px;  text-align: center; }
.area_title h2{ height: 20px;line-height: 20px;font-size: 20px; color: #363636; background: url(../images/title_bg.jpg) no-repeat center; font-weight: normal;}
.area_title p{color: #9F9F9F; line-height: 34px; font-size: 14px;}

#foot{background: #66c5b4;}
#foot .container{height: 54px; line-height: 54px;font-size: 12px;color: white;}
#foot a{color: white;margin: 0 10px;}

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>上传HTML项目到Github</title>
      <link>https://bellamy0.gitHub.io/2020/git%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/git%E5%AD%A6%E4%B9%A0/</guid>
      <description>

&lt;h1 id=&#34;上传html项目到github&#34;&gt;上传HTML项目到Github&lt;/h1&gt;

&lt;p&gt;1.注册github&lt;/p&gt;

&lt;p&gt;2.下载git gui&lt;/p&gt;

&lt;p&gt;3.在磁盘创建一个用来存放git文件的文件夹（在git gui第一次运行时可以自动选择文件夹生成）&lt;/p&gt;

&lt;p&gt;4.将自己的项目文件夹拷贝到存放git文件的文件夹下&lt;/p&gt;

&lt;p&gt;5.打开git gui&lt;/p&gt;

&lt;p&gt;6.按顺序点击下方12345，在提示输入id与密码时输入&lt;/p&gt;

&lt;p&gt;7.如果是初次使用，会弹框提示你没有登录用户名，要打开命令行进行登录，命令行输入：
 git config –global username mygithub_name
 git config –global password mygithub_password&lt;/p&gt;

&lt;p&gt;资源里面点击 git Bash ，在命令行里面输入你的账号和密码，按照上面的两行格式，然后关闭就可以了。&lt;/p&gt;

&lt;p&gt;8.提交成功会显示 success 然后在 github 官网就能看到提交成功的项目了。&lt;/p&gt;

&lt;p&gt;9.进入github的该项目，点击settings，下拉找到GitHub Pages，按照图片进行设置&lt;/p&gt;

&lt;p&gt;10.该页面地址为&lt;code&gt;https://你的github用户名.github.io/项目名/文件夹名/文件名.html&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ps：项目名不是文件夹名称，是在github设置的名称&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>上传HTML项目到Github</title>
      <link>https://bellamy0.gitHub.io/2020/%E4%B8%8A%E4%BC%A0html%E9%A1%B9%E7%9B%AE%E5%88%B0github/</link>
      <pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/%E4%B8%8A%E4%BC%A0html%E9%A1%B9%E7%9B%AE%E5%88%B0github/</guid>
      <description>

&lt;h1 id=&#34;上传html项目到github&#34;&gt;上传HTML项目到Github&lt;/h1&gt;

&lt;p&gt;1.注册github&lt;/p&gt;

&lt;p&gt;2.下载git gui&lt;/p&gt;

&lt;p&gt;3.在磁盘创建一个用来存放git文件的文件夹（在git gui第一次运行时可以自动选择文件夹生成）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bellamy0/bellamy0.github.io/master/images/gitlearning/1.webp&#34; alt=&#34;Git gui&#34; /&gt;&lt;/p&gt;

&lt;p&gt;4.将自己的项目文件夹拷贝到存放git文件的文件夹下&lt;/p&gt;

&lt;p&gt;5.打开git gui&lt;/p&gt;

&lt;p&gt;6.按顺序点击下方12345，在提示输入id与密码时输入&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bellamy0/bellamy0.github.io/master/images/gitlearning/2.webp&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;7.如果是初次使用，会弹框提示你没有登录用户名，要打开命令行进行登录，命令行输入：
 git config –global username mygithub_name
 git config –global password mygithub_password&lt;/p&gt;

&lt;p&gt;资源里面点击 git Bash ，在命令行里面输入你的账号和密码，按照上面的两行格式，然后关闭就可以了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bellamy0/bellamy0.github.io/master/images/gitlearning/3.webp&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;8.提交成功会显示 success 然后在 github 官网就能看到提交成功的项目了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bellamy0/bellamy0.github.io/master/images/gitlearning/4.webp&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;9.进入github的该项目，点击settings，下拉找到GitHub Pages，按照图片进行设置&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bellamy0/bellamy0.github.io/master/images/gitlearning/5.webp&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bellamy0/bellamy0.github.io/master/images/gitlearning/6.webp&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;10.该页面地址为&lt;code&gt;https://你的github用户名.github.io/项目名/文件夹名/文件名.html&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ps：项目名不是文件夹名称，是在github设置的名称&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>解决Github图片显示问题</title>
      <link>https://bellamy0.gitHub.io/2020/%E8%A7%A3%E5%86%B3github%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/%E8%A7%A3%E5%86%B3github%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</guid>
      <description>

&lt;h1 id=&#34;解决github图片显示问题&#34;&gt;解决Github图片显示问题&lt;/h1&gt;

&lt;h2 id=&#34;一-问题&#34;&gt;一.问题：&lt;/h2&gt;

&lt;p&gt;GitHub中图片无法正常显示，甚至连头像也会裂开&lt;/p&gt;

&lt;p&gt;按f12打开控制台查看错误原因&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Failed to load resource: net::ERR_CERT_COMMON_NAME_INVALID&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;有博主认为：实际上，可以认为，ERR_CERT_COMMON_NAME_INVALID就是用一个错误的域名访问了某个节点的https资源。导致这个错误的原因，基本是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;dns污染&lt;/li&gt;
&lt;li&gt;host设置错误&lt;/li&gt;
&lt;li&gt;官方更新了dns，但是dns缓存没有被更新，导致错误解析。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;二-解决办法&#34;&gt;二.解决办法：&lt;/h2&gt;

&lt;p&gt;主要思路就是使用本地&lt;code&gt;hosts&lt;/code&gt;文件对网站进行域名解析，一般的DNS问题都可以通过修改hosts文件来解决，github的CDN域名被污染问题也不例外，同样可以通过修改hosts文件解决，将域名解析直接指向IP地址来绕过DNS的解析，以此解决污染问题。&lt;/p&gt;

&lt;h3 id=&#34;2-1-找到url&#34;&gt;2.1 找到URL&lt;/h3&gt;

&lt;p&gt;打开GitHub带有任意挂掉图片的网页，使用元素选择器（Ctrl+Shift+C），放在显示不了的图片上，或者在挂掉的图片上右键-检查元素，找到该元素的标签，复制其URL（src引号里的内容）&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://avatars0.githubusercontent.com/u/44628130?s=460&amp;amp;amp;v=4&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-2-获取ip地址&#34;&gt;2.2 获取ip地址&lt;/h3&gt;

&lt;p&gt;之后打开&lt;a href=&#34;https://www.ipaddress.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;ipaddress&lt;/a&gt; 在搜索框搜索二级域名&lt;code&gt;avatars0.githubusercontent.com&lt;/code&gt;  ，随后能看到该域名的ip address，写下博客时为：199.232.28.133&lt;/p&gt;

&lt;p&gt;随后我们用该ip地址与域名映射起来&lt;/p&gt;

&lt;h3 id=&#34;2-3修改hosts&#34;&gt;2.3修改hosts&lt;/h3&gt;

&lt;p&gt;用sublime打开&lt;code&gt;C:\Windows\System32\drivers\etc\hosts&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;第一次更改时先在末尾添加：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# GitHub Start 
192.30.253.112    github.com 
192.30.253.119    gist.github.com
151.101.184.133    assets-cdn.github.com
151.101.184.133    raw.githubusercontent.com
151.101.184.133    gist.githubusercontent.com
151.101.184.133    cloud.githubusercontent.com
151.101.184.133    camo.githubusercontent.com
151.101.184.133    avatars0.githubusercontent.com
151.101.184.133    avatars1.githubusercontent.com
151.101.184.133    avatars2.githubusercontent.com
151.101.184.133    avatars3.githubusercontent.com
151.101.184.133    avatars4.githubusercontent.com
151.101.184.133    avatars5.githubusercontent.com
151.101.184.133    avatars6.githubusercontent.com
151.101.184.133    avatars7.githubusercontent.com
151.101.184.133    avatars8.githubusercontent.com

 # GitHub End
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;非第一次修改则直接找查询的域名，更改对应域名的旧ip为新ip&lt;/p&gt;

&lt;p&gt;PS：如果后续挂掉再修改即可&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSS学习四</title>
      <link>https://bellamy0.gitHub.io/2020/css%E5%AD%A6%E4%B9%A0%E5%9B%9B/</link>
      <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/css%E5%AD%A6%E4%B9%A0%E5%9B%9B/</guid>
      <description>

&lt;h1 id=&#34;一-float浮动&#34;&gt;一.float浮动&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;文档流：文档流是文档中可显示对象在排列时所占用的位置&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;float特性：加浮动元素（提高当前内容的层次），会脱离文档流（脱离body），会延迟父容器靠左或靠右排列，如果之前已经有浮动元素，会挨着浮动的元素进行排列&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;float取值：left、right、none（默认）&lt;/li&gt;
&lt;li&gt;float注意点 ：

&lt;ul&gt;
&lt;li&gt;只会影响后面的元素 ①&lt;/li&gt;
&lt;li&gt;内容默认提升半层（图文混排效果）&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;宽由内容决定（类似内联）（块是由父容器决定）&lt;/li&gt;
&lt;li&gt;换行排列&lt;/li&gt;
&lt;li&gt;针对内联也适用（不常用）&lt;/li&gt;
&lt;li&gt;不方便居中&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;
    &amp;lt;style&amp;gt;
        //此时黄色在上，红色在下，按文档流中的块排列  
        body{ border:1px black solid;}
        #box1{ width:100px; height:100px; background:yellow; }
        #box2{ width:200px; height:200px; background:red; }
        //此时黄色会浮在红色上方，依靠着由红色撑起来的父容器，向左排列
        body{ border:1px black solid;}
        #box1{ width:100px; height:100px; background:yellow; float:left; }
        #box2{ width:200px; height:200px; background:red; }
        //此时两者都浮动，文档流（body）部分无内容，两者并排
        body{ border:1px black solid;}
        #box1{ width:100px; height:100px; background:yellow; float:left; }
        #box2{ width:200px; height:200px; background:red; float:left; }
        //① 黄色依然在红色上方，区别是蓝色此时在红色底部
        body{ border:1px black solid;}
        #box1{ width:100px; height:100px; background:yellow;}
        #box2{ width:200px; height:200px; background:red; float:left; }
        #box3{ width:300px; height:300px; background:blue; }
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;box1&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div id=&amp;quot;box2&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div id=&amp;quot;box3&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;清除浮动&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;上下排列：clear属性：表示清除浮动的，值可以为left，both，right （clear属性只会操作块标签，对内联标签不起作用）&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;
    &amp;lt;style&amp;gt;
        //此时黄色在上，红色在下，按文档流中的块排列  
        body{ border:1px black solid;}
        #box1{ width:100px; height:100px; background:yellow; float:left; }
        #box2{ width:200px; height:200px; background:red; clear:left; }
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;box1&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div id=&amp;quot;box2&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;嵌套排列：&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;固定宽高：不推荐，不能把高度固定死，不适合自适应&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;父元素设置浮动：不推荐，在同一个层次上虽然能撑开，但是会影响后面的内容&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;overflow:hidden&lt;/code&gt;：不推荐，内容溢出时会被截掉&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;display:inline-block&lt;/code&gt;： 不推荐，更改了盒模型的排列&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;设置空标签：不推荐，用空标签清除浮动，会多添加一个标签&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;  &amp;lt;head&amp;gt;
      &amp;lt;style&amp;gt;
          #box1{ width:200px; border:1px black solid;}
          #box2{ width:100px; height:200px; background:red; float:left; }
          .clear{clear:both;}
      &amp;lt;/style&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
      &amp;lt;div id=&amp;quot;box1&amp;quot;&amp;gt;
        &amp;lt;div id=&amp;quot;box2&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
          &amp;lt;div class=&amp;quot;clear&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
      aaaaaaaa
  &amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;用after伪类：推荐，空标签加强版，（clear属性只会操作块标签，对内联标签不起作用）&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;
    &amp;lt;style&amp;gt;
        #box1{ width:200px; border:1px black solid;}
        #box2{ width:100px; height:200px; background:red; float:left; }
        .clear:after{ content:&#39;&#39;; clear:both; display:block; }
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;box1&amp;quot; class=&amp;quot;clear&amp;quot;&amp;gt;
        &amp;lt;div id=&amp;quot;box2&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    aaaaaaaa
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;制造浮动又清除浮动的原因：制造浮动是为了让块元素并列显示，浮动容易打乱排版，清除浮动后仍然能并列显示&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;二-relative相对定位等&#34;&gt;二.relative相对定位等&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;position定位：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;取值：static（默认），relative，absolute，fixed，sticky&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;relative相对定位（不可层叠）：(上下左右是反的)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;如果没有定义偏移量，对元素没有任何影响&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;不使元素脱离文档流（会占位）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;不影响其他元素布局&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;是相对于当前元素自身位置偏移（左上角为（0，0））&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;#box2{ width:100px; height:100px; background:red; position:relative; left:100px; }
//可设置left、right、top、bottom
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;absolute绝对定位（可层叠）：&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使元素脱离文档流（类似浮动）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;可以让内联元素具备宽高（让内联具有块特性）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使块元素默认宽高由内容决定（让块具有内联性）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;有定位祖先元素，则相对于祖先元素偏移，没有则相对于整个文档偏移&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;fixed固定定位：（返回顶部功能，弹窗广告功能）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使元素脱离文档流（类似浮动）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;可以让内联元素具备宽高（让内联具有块特性）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使块元素默认宽高由内容决定（让块具有内联性）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;相对于整个浏览器窗口进行偏移&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;sticky黏性定位：吸附效果（拖动到设置位置时会固定）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;z-index：提升层级（取值整数），几个position属性都适用，同一层级优先比较&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;z-index:0;&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;三-css添加省略号&#34;&gt;三.css添加省略号&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;text-overflow:ellipsis;&lt;/code&gt;  ：添加省略号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;white-space:nowrap;&lt;/code&gt;  ：内容不折行&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;四-css精灵-雪碧图&#34;&gt;四.css精灵（雪碧图）&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;特性：将网页涉及到的零星图片都包含到一张图上&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;好处：减少图片的质量，网页的图片加载速度快，减少图片的请求次数&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;五-css圆角设置&#34;&gt;五.css圆角设置&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;border-radius:number or %;&lt;/code&gt;：圆的半径&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;
&amp;lt;style&amp;gt;
    //四个角
    #box{ width:200px; height:200px; background:red; border-radius:100px; }
    //容器的百分比
    #box{ width:200px; height:200px; background:red; border-radius:50%; }
    //两对角
    #box{ width:200px; height:200px; background:red; border-radius:10px 20px; }
    //四个角
    #box{ width:200px; height:200px; background:red; border-radius:10px 20px 30px 40px; }
    //椭圆角
    #box{ width:200px; height:200px; background:red; border-radius:20px/40px; }
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;六-pc端网页&#34;&gt;六.pc端网页&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;通栏：自适应浏览器宽度&lt;/li&gt;
&lt;li&gt;版心：一个固定宽度并让容器居中&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>