<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript on Bellamy</title>
    <link>https://bellamy0.gitHub.io/tags/javascript/</link>
    <description>Recent content in JavaScript on Bellamy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://bellamy0.gitHub.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>javascript学习七——js面向对象基础</title>
      <link>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%B8%83/</link>
      <pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%B8%83/</guid>
      <description>20</description>
    </item>
    
    <item>
      <title>javascript学习六——Ajax</title>
      <link>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E5%85%AD/</link>
      <pubDate>Thu, 19 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E5%85%AD/</guid>
      <description>1.服务器配置  安装nodejs与python并进行配置 在文件存放目录下使用cmd，输入命令http-server启动服务器，此时可根据网址localhost:8080/index.html访问（端口号与页面名称自己更改） Ajax不能以本地路径执行，必须进行服务器配置  2.Ajax基础  ajax读取文件：ajax(url,成功时执行的函数，失败时执行的函数);  ajax(&amp;quot;aaa.txt&amp;quot;,funtion(str){//str作用，获取服务器返回的内容 alert(str); },funtion(){ alert(&amp;quot;失败&amp;quot;); });   字符集编码：需要读的文件跟所有文件必须统一编码，否则易乱码 eval：将某个东西解析为js可以分析的内容（？）—可以解析json
 get请求：不填method默认为get
 通过网址传递
 被提交到网址后面，在url后加：username=xxx&amp;amp;password=xxx
 容量小（网址长度有限制）
  post请求：
 不通过网址传递
 不提交倒网址后面，只能通过network查看到
 容量大
   &amp;lt;head&amp;gt; &amp;lt;script&amp;gt; &amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;form action=&amp;quot;www...&amp;quot; method=&amp;quot;get&amp;quot;&amp;gt; //action为提交地址 用户名：&amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;username&amp;quot;&amp;gt;&amp;lt;br&amp;gt; //name与id相像，id给前台看，name数据传递给后台 密码：&amp;lt;input type=&amp;quot;password&amp;quot; name=&amp;quot;password&amp;quot;&amp;gt;&amp;lt;br&amp;gt; &amp;lt;input type=&amp;quot;submit&amp;quot;&amp;gt; //submit用于提交表单 &amp;lt;/form&amp;gt; &amp;lt;/body&amp;gt;  3.Ajax中级  编写ajax 补：全局变量是window上一个属性window.a  a(存在形式变量)、window.a(存在形式属性)——未定义的变量会报错、未定义的属性只会undefined
 防止缓存：在文件名后加&amp;rdquo;a.txt?t=&amp;ldquo;+new Date().</description>
    </item>
    
    <item>
      <title>javascript学习五——事件基础</title>
      <link>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%BA%94/</link>
      <pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%BA%94/</guid>
      <description>1.event事件和事件冒泡  document：代表整个页面  document.onclick=function(){};
 body:需要撑起来才有内容
 event.clientX/ev.clientX：获取鼠标的横坐标(两种有兼容性的问题)
 event.clientY/ev.clientY：获取鼠标的纵坐标
 ev事件处理函数有参数，是系统传的
 解决event/ev兼容性
  某个var对象or整个document.onclick=funtion(ev){ var oEvent=ev||event; alert(oEvent.clientX+&amp;quot;,&amp;quot;+oEvent.clientY); };   事件冒泡——典型事件流：事件会一直顺着层级传，直到最外层document
 取消冒泡的应用：下拉菜单，点击外面时菜单消失
  oEvent.cancelBubble=true;
2.鼠标事件  onmousemove:鼠标移动时发生  某个var对象or整个document.onmousemove=function(ev){ var oEvent=ev||event; …… };   scrolltop：（？）  3.键盘事件  onkeydown：按键按下  某个var对象or整个document.onkeydown=funtion(ev){ var oEvent=ev||event; alert(oEvent.keyCode); };   onkeyup：按键抬起 eg：按键控制div移动 ctrlkey、shiftkey、altkey：判断ctrl/shift/alt是否被按下 eg：提交留言在输入框的对象中加onkeydown  if(oEvent.keyCode==13 &amp;amp;&amp;amp; oEvent.ctrlKey){ //判断是否是ctrl和回车 };  4.默认行为  当用户点右键弹出菜单时的事件：  某个var对象or整个document.</description>
    </item>
    
    <item>
      <title>javascript学习四——运动基础</title>
      <link>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E5%9B%9B/</link>
      <pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E5%9B%9B/</guid>
      <description>1.div的运动  运动中的bug解决：  不会停止——清除timer 速度取到某些值无法停止——用&amp;gt;=判断而非== 到达位置点击还会再运动：clearInterval是clear了下一次的——用if else 重复点击速度加快——在前面先清除所有Interval   &amp;lt;head&amp;gt; &amp;lt;style&amp;gt; #div1{width:200; height:200px; background:red; position:absolute; top:50px; left:0px;} &amp;lt;/style&amp;gt; &amp;lt;script&amp;gt; var timer=null; function startMove(){ var oDiv=document.getElementById(&amp;quot;div1&amp;quot;); //clearInterval是防止开启多个定时器 clearInterval(timer); timer=setInterval(function(){ if(oDiv.offsetLeft&amp;gt;=300){ clearInterval(timer); }else{ oDiv.style.left=oDiv.offsetLeft+10+&amp;quot;px&amp;quot;; } },30); }; &amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;input id=&amp;quot;btn1&amp;quot; type=&amp;quot;button&amp;quot; value=&amp;quot;开始运动&amp;quot; onclick=&amp;quot;startMove()&amp;quot;&amp;gt; &amp;lt;div id=&amp;quot;div1&amp;quot;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt;  2.运动框架  开始运动时关闭已有定时器 把运动和停止隔开（if/else） “分享到”实例：  &amp;lt;head&amp;gt; &amp;lt;style&amp;gt; #div1{width:150px; height:200px; background:green; position:absolute; left:-150;} #div1 span{position:absolut; width:20px; height:60px;line-height:20px; background:blue; tight:-20px; top:70px;} &amp;lt;/style&amp;gt; &amp;lt;script&amp;gt; window.</description>
    </item>
    
    <item>
      <title>javascript学习三——DOM</title>
      <link>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%B8%89/</link>
      <pubDate>Fri, 21 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%B8%89/</guid>
      <description>1.节点  DOM——&amp;gt;document
 节点
 文本节点：无标签包裹的 元素节点：标签中的  获取子节点：
 childNotes：获取某标签下所有节点 children：获取某标签下元素节点 oUl.children
 只算第一层  父节点：
 查找父节点：parentNode  父节点应用：隐藏列表项
  &amp;lt;head&amp;gt; &amp;lt;script&amp;gt; window.onload=function(){ var aA=document.getElementsByTypeName(&amp;quot;a&amp;quot;); for(var i=0;i&amp;lt;aA.lenght;i++){ aA[i].onclick=function(){ this.parentNode.display=hidden; }; }; }; &amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;javascript:;&amp;quot;&amp;gt;a&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;javascript:;&amp;quot;&amp;gt;b&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;javascript:;&amp;quot;&amp;gt;c&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/body&amp;gt;   offsetParent：获取元素在页面上的实际位置 firstChild/lastChild：获取收尾子节点 nextSibling/previousSibling：兄弟节点  2.操作元素的方式：  用点操作 用方括号操作 DOM：（一般不用）  setAttribute(&amp;ldquo;属性名&amp;rdquo;,&amp;ldquo;值&amp;rdquo;)：设置某属性的值 getAttribute（&amp;rdquo;属性名&amp;rdquo;）：获取某属性的值 removeAttribute(&amp;ldquo;属性名&amp;rdquo;)：删除某属性的值   &amp;lt;head&amp;gt; &amp;lt;script&amp;gt; window.onload=function(){ var oTxt=document.</description>
    </item>
    
    <item>
      <title>javascript学习二——定时器</title>
      <link>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%BA%8C/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%BA%8C/</guid>
      <description>1.打开定时器 1.1 setInterval  用法：setInterval(函数名，时间ms) 作用：每个一段时间执行一次函数 返回值：打开的那个定时器  1.2 setTimeout  用法：setTimeout(函数名，时间ms) 作用：只执行一次，且时间为多久后消失  2.关闭定时器 2.1 clearInterval  用法：clearInterval(需要关闭的定时器) ，此处括号的内容需setInterval返回  2.2 clearTimeout  用法：同上  3.打开与关闭实例 &amp;lt;script&amp;gt; window.onload=function(){ var oBtn1=document.getElementId(&amp;quot;btn1&amp;quot;); var oBtn2=document.getElementId(&amp;quot;btn2&amp;quot;); //设置打开按钮 oBtn1.onclick=function(){ //timer用于获取当前打开的是哪个定时器 timer=setInterval(function(){ alert(&amp;quot;a&amp;quot;); },1000); }; //设置关闭按钮 oBtn2.onclick=function(){ clearInterval(timer); }; }; &amp;lt;/script&amp;gt;  4.Date对象 4.1 getHours  作用：获取当前时间  4.2 getMinutes  作用：获取当前分钟  4.3 getSecond  作用：获取当前秒  4.4 getFullYear  作用：获取年份  4.5 getMonth  作用：获取月份，从0开始，需要+1  4.</description>
    </item>
    
    <item>
      <title>javascript学习一——基础语法</title>
      <link>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%B8%80/</link>
      <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/javascript%E5%AD%A6%E4%B9%A0%E4%B8%80/</guid>
      <description>一、JS基础语法知识 1. JavaScript组成：  ECMAscript
 DOM：文档
 BOM：浏览器
  2. 属性：  type=&amp;lsquo;text/javascript&amp;rsquo;说明标签内的文本格式 src引入外部js文件  &amp;lt;script src=&amp;quot;demo.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
3. 注意点：  可以有多个&amp;lt;script&amp;gt;标签，但js是按代码顺序执行的 一个标签只能做一件事情（要么引入，要么直接在里面写代码） js代码需要有分号！  4. js中的输出方法：  alert()：弹出一个警告框 document.write()：在页面上输出内容  如果括号内有html标签会自动解析，不会以文本形式输出  console.log()：在控制台上输入内容  一般用于代码调试，不影响用户（招聘简介放在）   5、常量  数据类型：  数字： 类型：number 例子：100、-20、3.14 布尔值： 类型：Boolean 例子：true、false 字符串： 类型：所有单引号或双引号的内容（都一样） 例子：“100”，“hello” 复合/引用数据类型： 特殊数据类型：null、undefined（没有初始化）、NaN   6、变量  声明变量关键字：var  7、变量弱引用  定义：变量赋值是什么类型，就是什么类型 注意：不建议改变变量的数据类型  8、三目运算符 num % 2 = 0 ?</description>
    </item>
    
  </channel>
</rss>