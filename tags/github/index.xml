<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on Bellamy</title>
    <link>https://bellamy0.gitHub.io/tags/github/</link>
    <description>Recent content in Github on Bellamy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://bellamy0.gitHub.io/tags/github/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>上传HTML项目到Github</title>
      <link>https://bellamy0.gitHub.io/2020/git%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/git%E5%AD%A6%E4%B9%A0/</guid>
      <description>上传HTML项目到Github 1.注册github
2.下载git gui
3.在磁盘创建一个用来存放git文件的文件夹（在git gui第一次运行时可以自动选择文件夹生成）
4.将自己的项目文件夹拷贝到存放git文件的文件夹下
5.打开git gui
6.按顺序点击下方12345，在提示输入id与密码时输入
7.如果是初次使用，会弹框提示你没有登录用户名，要打开命令行进行登录，命令行输入： git config –global username mygithub_name git config –global password mygithub_password
资源里面点击 git Bash ，在命令行里面输入你的账号和密码，按照上面的两行格式，然后关闭就可以了。
8.提交成功会显示 success 然后在 github 官网就能看到提交成功的项目了。
9.进入github的该项目，点击settings，下拉找到GitHub Pages，按照图片进行设置
10.该页面地址为https://你的github用户名.github.io/项目名/文件夹名/文件名.html
ps：项目名不是文件夹名称，是在github设置的名称</description>
    </item>
    
    <item>
      <title>上传HTML项目到Github</title>
      <link>https://bellamy0.gitHub.io/2020/%E4%B8%8A%E4%BC%A0html%E9%A1%B9%E7%9B%AE%E5%88%B0github/</link>
      <pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/%E4%B8%8A%E4%BC%A0html%E9%A1%B9%E7%9B%AE%E5%88%B0github/</guid>
      <description>上传HTML项目到Github 1.注册github
2.下载git gui
3.在磁盘创建一个用来存放git文件的文件夹（在git gui第一次运行时可以自动选择文件夹生成）
4.将自己的项目文件夹拷贝到存放git文件的文件夹下
5.打开git gui
6.按顺序点击下方12345，在提示输入id与密码时输入
7.如果是初次使用，会弹框提示你没有登录用户名，要打开命令行进行登录，命令行输入： git config –global username mygithub_name git config –global password mygithub_password
资源里面点击 git Bash ，在命令行里面输入你的账号和密码，按照上面的两行格式，然后关闭就可以了。
8.提交成功会显示 success 然后在 github 官网就能看到提交成功的项目了。
9.进入github的该项目，点击settings，下拉找到GitHub Pages，按照图片进行设置
10.该页面地址为https://你的github用户名.github.io/项目名/文件夹名/文件名.html
ps：项目名不是文件夹名称，是在github设置的名称</description>
    </item>
    
    <item>
      <title>解决Github图片显示问题</title>
      <link>https://bellamy0.gitHub.io/2020/%E8%A7%A3%E5%86%B3github%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bellamy0.gitHub.io/2020/%E8%A7%A3%E5%86%B3github%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</guid>
      <description>解决Github图片显示问题 一.问题： GitHub中图片无法正常显示，甚至连头像也会裂开
按f12打开控制台查看错误原因
Failed to load resource: net::ERR_CERT_COMMON_NAME_INVALID
有博主认为：实际上，可以认为，ERR_CERT_COMMON_NAME_INVALID就是用一个错误的域名访问了某个节点的https资源。导致这个错误的原因，基本是：
 dns污染 host设置错误 官方更新了dns，但是dns缓存没有被更新，导致错误解析。  二.解决办法： 主要思路就是使用本地hosts文件对网站进行域名解析，一般的DNS问题都可以通过修改hosts文件来解决，github的CDN域名被污染问题也不例外，同样可以通过修改hosts文件解决，将域名解析直接指向IP地址来绕过DNS的解析，以此解决污染问题。
2.1 找到URL 打开GitHub带有任意挂掉图片的网页，使用元素选择器（Ctrl+Shift+C），放在显示不了的图片上，或者在挂掉的图片上右键-检查元素，找到该元素的标签，复制其URL（src引号里的内容）
https://avatars0.githubusercontent.com/u/44628130?s=460&amp;amp;amp;v=4
2.2 获取ip地址 之后打开ipaddress 在搜索框搜索二级域名avatars0.githubusercontent.com ，随后能看到该域名的ip address，写下博客时为：199.232.28.133
随后我们用该ip地址与域名映射起来
2.3修改hosts 用sublime打开C:\Windows\System32\drivers\etc\hosts
第一次更改时先在末尾添加：
# GitHub Start 192.30.253.112 github.com 192.30.253.119 gist.github.com 151.101.184.133 assets-cdn.github.com 151.101.184.133 raw.githubusercontent.com 151.101.184.133 gist.githubusercontent.com 151.101.184.133 cloud.githubusercontent.com 151.101.184.133 camo.githubusercontent.com 151.101.184.133 avatars0.githubusercontent.com 151.101.184.133 avatars1.githubusercontent.com 151.101.184.133 avatars2.githubusercontent.com 151.101.184.133 avatars3.githubusercontent.com 151.101.184.133 avatars4.githubusercontent.com 151.101.184.133 avatars5.githubusercontent.com 151.101.184.133 avatars6.githubusercontent.com 151.101.184.133 avatars7.githubusercontent.com 151.101.184.133 avatars8.githubusercontent.com # GitHub End  非第一次修改则直接找查询的域名，更改对应域名的旧ip为新ip</description>
    </item>
    
  </channel>
</rss>